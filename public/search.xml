<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C++构建自己的计算机 ，C++机器语言程序</title>
    <url>/2020/10/24/C++%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%AE%A1%E7%AE%97%E6%9C%BA%20%EF%BC%8CC++%E6%9C%BA%E5%99%A8%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>题目出自《c++大学教程第五版》<br>需要建立一个称为Simpletron的计算机，其中所有的信息都是由带符号的4位十进制数组成的“字”来助理，前两位是操作码，之后的两位是内存位置，需要将各操作码的功能实现，话不多说，直接上代码</p>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pusherror</span><span class="params">()</span></span>;<span class="comment">//抛出错误</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halt</span><span class="params">()</span></span>;<span class="comment">//寄存器与内存信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>;<span class="comment">//输出程序启动信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">action</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;<span class="comment">//执行各指令</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>;<span class="comment">//输入指令字并提取信息</span></span><br><span class="line"><span class="keyword">int</span> memory[<span class="number">100</span>];<span class="comment">//内存</span></span><br><span class="line"><span class="keyword">int</span> acc=<span class="number">0</span>;<span class="comment">//累加寄存器，初始化为0</span></span><br><span class="line"><span class="keyword">int</span> counter;<span class="comment">//下一个内存位置</span></span><br><span class="line"><span class="keyword">int</span> operand;<span class="comment">//内存位置</span></span><br><span class="line"><span class="keyword">int</span> operationCode;<span class="comment">//指令</span></span><br><span class="line"><span class="built_in">string</span> instructionRegister=<span class="string">&quot;+0000&quot;</span>;<span class="comment">//命令字</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    start();</span><br><span class="line">    input();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> <span class="comment">//输出开机内容</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*** Welcome to Simpletron! ***&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;*** Please enter your program one instruction ***&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*** (or data word) at a time.I will type the ***&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;*** location number and a question mark(? ). ***&lt;&lt;endl&quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*** You then type the word for that location. ***&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;*** Type the sentinel - 99999 to stop entering ***&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*** your program. ***&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pusherror</span><span class="params">()</span><span class="comment">//打印错误信息</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*** Attempt to divide by zero ***&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*** Simpletron execution abnormally terminated ***&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    halt();</span><br><span class="line">    input();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halt</span><span class="params">()</span><span class="comment">//输出内存的全部内容</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> sp = <span class="string">&quot;        &quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;REGISTERS&quot;</span> &lt;&lt; <span class="built_in">endl</span>;<span class="comment">//输出各寄存器中的值</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;accumlator&quot;</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; setw(<span class="number">6</span>) &lt;&lt; <span class="string">&quot;+&quot;</span> &lt;&lt; setw(<span class="number">4</span>) &lt;&lt; setfill(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; acc &lt;&lt; setfill(<span class="string">&#x27; &#x27;</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;counter&quot;</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; sp &lt;&lt; setw(<span class="number">2</span>) &lt;&lt; setfill(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; counter &lt;&lt; setfill(<span class="string">&#x27; &#x27;</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;instructionRegister&quot;</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; instructionRegister &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;operationCode&quot;</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; sp &lt;&lt; setw(<span class="number">2</span>) &lt;&lt; setfill(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; operationCode &lt;&lt; setfill(<span class="string">&#x27; &#x27;</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; resetiosflags(ios::right) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;operand&quot;</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; sp &lt;&lt; setw(<span class="number">2</span>) &lt;&lt; setfill(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; operand &lt;&lt; setfill(<span class="string">&#x27; &#x27;</span>) &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;MEMORY:&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) <span class="comment">//输出内存中内容</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; setiosflags(ios::right) &lt;&lt; setw(<span class="number">6</span>) &lt;&lt; i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot; 0&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; <span class="number">0</span> &amp;&amp; k % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; setw(<span class="number">2</span>) &lt;&lt; setfill(<span class="string">&#x27; &#x27;</span>) &lt;&lt; k;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; +&quot;</span> &lt;&lt; setw(<span class="number">4</span>) &lt;&lt; setfill(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; memory[i];</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    input();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">action</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> <span class="comment">//根据指令进行对应操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    counter = p;</span><br><span class="line">    operationCode = op;</span><br><span class="line">    operand = p;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">-9999</span> || n&gt;<span class="number">9999</span>)</span><br><span class="line">        pusherror();</span><br><span class="line">    <span class="keyword">switch</span> (op)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>: <span class="comment">//从键盘中读入值到内存中指定位置</span></span><br><span class="line">        memory[p] = n;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>: <span class="comment">//输出内存中指定位置的值</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; memory[p] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">20</span>: <span class="comment">//将内存中指定位置的值载入累加器</span></span><br><span class="line">        acc = memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">21</span>: <span class="comment">//将累加器中的值存储在内存中指定位置</span></span><br><span class="line">        memory[p] = acc;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">30</span>: <span class="comment">//累加器加值</span></span><br><span class="line">        acc += memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">31</span>: <span class="comment">//累加器减值</span></span><br><span class="line">        acc -= memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">32</span>: <span class="comment">//累加器除值</span></span><br><span class="line">        <span class="keyword">if</span> (memory[p] == <span class="number">0</span>)</span><br><span class="line">            pusherror();</span><br><span class="line">        acc /= memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">33</span>: <span class="comment">//累加器乘值</span></span><br><span class="line">        acc *= memory[p];</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">40</span>: <span class="comment">//转移到内存中特定位置</span></span><br><span class="line">        memory[p] = acc;</span><br><span class="line">        counter = operand;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">41</span>: <span class="comment">//累加器如为负，转移至内存</span></span><br><span class="line">        <span class="keyword">if</span> (acc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            memory[p] = acc;</span><br><span class="line">            acc = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">42</span>: <span class="comment">//累加器如为零，转移至内存</span></span><br><span class="line">        <span class="keyword">if</span> (acc == <span class="number">0</span>) &#123;</span><br><span class="line">            memory[p] = acc;</span><br><span class="line">            acc = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        input();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:<span class="comment">//结束程序</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;你的输入有误，请重新输入！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        input();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span> <span class="comment">//输入并提取有效信息</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;? &quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> in;</span><br><span class="line">    getline(<span class="built_in">cin</span>, in);</span><br><span class="line">    <span class="keyword">if</span> (in.compare(<span class="string">&quot;halt&quot;</span>) != <span class="number">0</span>)</span><br><span class="line">        instructionRegister.assign(in);</span><br><span class="line">    <span class="built_in">string</span>::size_type k = in.find(<span class="string">&#x27;+&#x27;</span>);<span class="comment">//查找输入项中的“+”号，判断输入是否符合语法</span></span><br><span class="line">    <span class="built_in">string</span>::size_type l = in.find(<span class="string">&quot;halt&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (l != <span class="built_in">string</span>::npos)</span><br><span class="line">        halt();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="built_in">string</span>::npos) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;你的输入有误!请重新输入&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        input();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> order = in.substr(<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//order是输入项中所含指令</span></span><br><span class="line">    <span class="built_in">string</span> x, n;</span><br><span class="line">    x = in.substr(<span class="number">3</span>, <span class="number">2</span>);<span class="comment">//x为储存位置</span></span><br><span class="line">    <span class="keyword">if</span> (in.length() &gt; <span class="number">5</span>)<span class="comment">//获取操作数</span></span><br><span class="line">        n = in.substr(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        n = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> d = stoi(n);<span class="comment">//将n,order转化为整数</span></span><br><span class="line">    <span class="keyword">int</span> c = stoi(x);<span class="comment">//将内存位置转化为整数存储在count中</span></span><br><span class="line">    <span class="keyword">int</span> iorder = stoi(order);</span><br><span class="line">    <span class="keyword">if</span> (c &lt; <span class="number">0</span> || c&gt;<span class="number">99</span>)</span><br><span class="line">        pusherror();</span><br><span class="line">    <span class="keyword">if</span> (iorder == <span class="number">43</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*** Program end. ***&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    action(iorder, c, d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>题目算法难度不大，需要多注意细节，不要掉坑哦</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>test_my_site</title>
    <url>/2020/10/17/test-my-site/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>sublime _ vscode 快捷生成HTML代码</title>
    <url>/2020/10/24/sublime%20_%20vscode%20%E5%BF%AB%E6%8D%B7%E7%94%9F%E6%88%90HTML%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<blockquote>
<p>文章转载自<a href="https://www.cnblogs.com/suitongyu/p/12043791.html">https://www.cnblogs.com/suitongyu/p/12043791.html</a></p>
</blockquote>
<p>@<a href="%E7%9B%AE%E5%BD%95">TOC</a></p>
<h2 id="基本html结构"><a href="#基本html结构" class="headerlink" title="基本html结构"></a>基本html结构</h2><p>输入 <strong>!+Enter</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="生成div加类名的快捷键"><a href="#生成div加类名的快捷键" class="headerlink" title="生成div加类名的快捷键"></a>生成div加类名的快捷键</h2><p>输入 div.list&gt;div.item_$*6</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item_1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item_2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item_3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item_4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item_5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item_6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h2 id="带类名的div"><a href="#带类名的div" class="headerlink" title="带类名的div"></a>带类名的div</h2><p>输入 div.wrapper</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="带id的div"><a href="#带id的div" class="headerlink" title="带id的div"></a>带id的div</h2><p>div#wrapper</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="属性"><a href="#属性" class="headerlink" title="属性 []"></a>属性 []</h2><p>span[title=”test”]</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="后代-gt"><a href="#后代-gt" class="headerlink" title="后代 &gt;"></a>后代 &gt;</h2><p>输入div&gt;span&gt;a</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="兄弟"><a href="#兄弟" class="headerlink" title="兄弟 +"></a>兄弟 +</h2><p>div+p+span</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="上级"><a href="#上级" class="headerlink" title="上级 ^"></a>上级 ^</h2><p>div&gt;span^i</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="乘法"><a href="#乘法" class="headerlink" title="乘法 *"></a>乘法 *</h2><p>ul&gt;li*2</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="文本"><a href="#文本" class="headerlink" title="文本 {}"></a>文本 {}</h2><p>div&gt;span{this is test}</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>this is test<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="自增符"><a href="#自增符" class="headerlink" title="自增符 $"></a>自增符 $</h2><p>ul&gt;li.list_${list $}*3</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list_1&quot;</span>&gt;</span>list 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list_2&quot;</span>&gt;</span>list 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list_3&quot;</span>&gt;</span>list 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>ul&gt;li.item$@3*3 “@3” （表示从3开始计数）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span>list 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span>list 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span>list 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h2><p>.class</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;class&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>ul&gt;.item</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>table&gt;.row&gt;.col</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title>科学上网教程</title>
    <url>/2021/04/03/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer">

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>科学上网：即翻墙访问外网，本教程仅介绍免费翻墙技巧，在速度和流量上有限制，但是不追求YouTube 4K画质够用了，白嫖党的福利，氪金大佬可充钱，这里主要介绍我目前在用的V2ray</p>
<h2 id="速度截图"><a href="#速度截图" class="headerlink" title="速度截图"></a>速度截图</h2><p>这是YouTube 4K视频的速度，这个速度相当不错了，全程无卡顿，在GitHub下载文件也是相当快，可以满足大部分需求</p>
<p><img src="http://www.liph.top/upload/images/2021/04/03/202708_3_4.png" alt="image1"></p>
<h2 id="服务器节点"><a href="#服务器节点" class="headerlink" title="服务器节点"></a>服务器节点</h2><p>V2ray主要使用各种服务器节点，有许多经销商，一般都有免费的节点，追求速度的可以氪金</p>
<p>接下来就是几个现在常用的提供商，大家看那个好用就用那个，一般是一个节点不行了就换一个</p>
<h3 id="自由人士"><a href="#自由人士" class="headerlink" title="自由人士"></a>自由人士</h3><p>免费节点：</p>
<p><img src="http://www.liph.top/upload/images/2021/04/03/202708_3_5.png" alt="image2.png"></p>
<p>注册链接：<a href="http://freeperson.xyz/auth/register">http://freeperson.xyz/auth/register</a></p>
<h3 id="CLAPSE"><a href="#CLAPSE" class="headerlink" title="CLAPSE"></a>CLAPSE</h3><p>注册送10G，7天后流量清零，过期后可选择3块或6块一个月的套餐，相对来说比较便宜</p>
<p>我的已经过期了，就不放截图了</p>
<p>注册链接：<a href="https://www.clapse.com/">https://www.clapse.com/</a></p>
<h3 id="MGNB"><a href="#MGNB" class="headerlink" title="MGNB"></a>MGNB</h3><p>注册送300g，两天后到期，不用代理，续费一月五毛，速度很快</p>
<p>免费节点：</p>
<p><img src="http://www.liph.top/upload/images/2021/04/03/202708_3_9.png"></p>
<p>注册链接：<a href="https://mgnb.vip/#/register">https://mgnb.vip/#/register</a></p>
<h3 id="小塞-SEBS"><a href="#小塞-SEBS" class="headerlink" title="小塞 SEBS"></a>小塞 SEBS</h3><p>注册送20G,有效期20天</p>
<p>注册链接：<a href="https://ggboom.site/">https://ggboom.site/</a></p>
<h2 id="节点使用教程"><a href="#节点使用教程" class="headerlink" title="节点使用教程"></a>节点使用教程</h2><p>有了服务器节点，怎么用呢，慢慢往下看</p>
<h3 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h3><p>下载V2ray客户端，解压后找到V2ray.exe双击即可打开代理，建议发送快捷方式到桌面</p>
<p><a href="http://www.liph.top/upload/files/2021/04/03/123728_3_3.zip">点我下载客户端</a></p>
<h3 id="配置节点"><a href="#配置节点" class="headerlink" title="配置节点"></a>配置节点</h3><p>下载好后去复制订阅链接，这里使用自由人士</p>
<p><img src="http://www.liph.top/upload/images/2021/04/03/202708_3_6.png"></p>
<p>复制订阅链接后粘贴到浏览器网址栏，下载txt文档，Ctrl+A复制txt文档中的内容，打开V2ray程序，右击，选择从剪贴板批量导入URL</p>
<p><img src="http://www.liph.top/upload/images/2021/04/03/202708_3_7.png"></p>
<p>再次右击V2ray程序，即可选择服务器，选择其中一个即可实现科学上网</p>
<p><img src="http://www.liph.top/upload/images/2021/04/03/202708_3_8.png"></p>
<h3 id="寻找服务器节点的方法"><a href="#寻找服务器节点的方法" class="headerlink" title="寻找服务器节点的方法"></a>寻找服务器节点的方法</h3><p>以上节点是在YouTube上看到的，类似的还有很多，有需求的可以自己去搜，有很多人专门分享的</p>
<h3 id="SSR"><a href="#SSR" class="headerlink" title="SSR"></a>SSR</h3><p>ssr俗称小飞机，和V2ray类似，但是V2ray目前比较稳定，这里就不对ssr作介绍了</p>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>很多服务器节点每天签到送流量，大家可以偶尔签到，不然流量可能不够用</p>
<p>以上教程为电脑端使用，手机端上述节点提供商也有相应程序可以下载，可以使用同样的节点</p>
<p>在配置过程中，大家有什么问题可以在评论区留言</p>
]]></content>
  </entry>
</search>
